@use "sass:math";

// Importing the mixins
@import "./mixin/setMediaQueryBreakpoints";
@import "./mixin/setResponsiveStyles";
@import "./mixin/getPrefix";
@import "./mixin/getPreviousPrefix";
@import "./mixin/setColsWidth";
@import "./mixin/addGridColumnsRows";
@import "./mixin/addCSSClasses";
@import "./mixin/addMarginPadding";
@import "./mixin/setGap";
@import "./mixin/setPull";

@mixin lucencyFlexboxGridSystem(
  $breakpoints: (
    xxl: "1536px",
    xl: "1280px",
    lg: "1024px",
    md: "768px",
    sm: "640px",
    xs: "420px",
  ),
  $columns: 12,
  $slug: "lucency"
) {
  $breakpoints: map-merge(
    (
      full: null,
    ),
    $breakpoints
  );

  // Building the flex grid system
  .#{$slug} {
    @include setResponsiveStyles($breakpoints) using ($currentPrefix, $prefix) {
      @include addCSSClasses(
        (
          "#{$slug}": (
            "prop": "display",
            "default": "flex",
            "values": (
              ("flex", flex),
              ("grid", grid),
            ),
          ),
          "#{$slug}-flex": (
            "prop": "flex-direction",
            "default": "row",
            "values": (
              ("row", row),
              ("row-reverse", row-reverse),
              ("column", column),
              ("column-reverse", column-reverse),
            ),
          ),
          "#{$slug}-flex-wrap": (
            "prop": "flex-wrap",
            default: "wrap",
            "values": (
              ("wrap", wrap),
              ("reverse", wrap-reverse),
              ("nowrap", nowrap),
            ),
          ),
          "#{$slug}-justify": (
            "prop": "justify-content",
            "default": "inherit",
            "values": (
              ("normal", normal),
              ("start", flex-start),
              ("end", flex-end),
              ("center", center),
              ("between", space-between),
              ("around", space-around),
              ("evenly", space-evenly),
              ("stretch", stretch),
            ),
          ),
          "#{$slug}-items": (
            "prop": "align-items",
            "default": "inherit",
            "values": (
              ("start", flex-start),
              ("end", flex-end),
              ("center", center),
              ("baseline", baseline),
              ("stretch", stretch),
            ),
          ),
          "#{$slug}-content": (
            "prop": "align-content",
            "default": "inherit",
            "values": (
              ("normal" normal),
              ("center", center),
              ("start", flex-start),
              ("end", flex-end),
              ("between", space-between),
              ("around", space-around),
              ("evenly", space-evenly),
              ("baseline", baseline),
              ("stretch", stretch),
            ),
          ),
        ),
        $prefix
      );
    }

    &-flex,
    &-grid {
      @include setResponsiveStyles($breakpoints) using ($currentPrefix, $prefix) {
        @include addMarginPadding(
          (
            "margin": (
              top,
              right,
              bottom,
              left,
            ),
            "padding": (
              top,
              right,
              bottom,
              left,
            ),
          ),
          $breakpoints,
          $currentPrefix,
          $prefix
        );

        @include setGap($breakpoints, $currentPrefix, $prefix);
      }

      > .#{$slug}-col {
        @include setResponsiveStyles($breakpoints) using
          ($currentPrefix, $prefix) {
          @include addMarginPadding(
            (
              "margin": (
                top,
                right,
                bottom,
                left,
              ),
              "padding": (
                top,
                right,
                bottom,
                left,
              ),
            ),
            $breakpoints,
            $currentPrefix,
            $prefix
          );
        }
      }
    }

    &-flex {
      > .#{$slug}-col {
        @include setResponsiveStyles($breakpoints) using
          ($currentPrefix, $prefix) {
          @include setColsWidth($prefix, $columns, $slug);
          @include setPull($prefix, $slug);

          @include addCSSClasses(
            (
              "#{$slug}-self": (
                "prop": "align-self",
                "values": (
                  ("auto", auto),
                  ("start", flex-start),
                  ("end", flex-end),
                  ("center", center),
                  ("stretch", stretch),
                  ("baseline", baseline),
                ),
              ),
              "#{$slug}-justify": (
                "prop": "justify-content",
                "default": "inherit",
                "values": (),
              ),
              "#{$slug}-items": (
                "prop": "align-items",
                "default": "inherit",
                "values": (),
              ),
              "#{$slug}-content": (
                "prop": "align-content",
                "default": "inherit",
                "values": (),
              ),
            ),
            $prefix
          );
        }
      }
    }

    &-grid {
      @include addGridColumnsRows($columns, $breakpoints, $slug);
    }

    &-align {
      @include setResponsiveStyles($breakpoints) using ($currentPrefix, $prefix) {
        &-left#{$prefix} {
          text-align: left;
        }
        &-center#{$prefix} {
          text-align: center;
        }
        &-right#{$prefix} {
          text-align: right;
        }
        &-justify#{$prefix} {
          text-align: justify;
        }
      }
    }
  }
}
